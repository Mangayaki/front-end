{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiago\\\\Documents\\\\Faculdade\\\\Inter\\\\Repositorio Mangayaki\\\\front-end\\\\front-end\\\\src\\\\Pages\\\\login\\\\LoginPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport logo from './../../componentes/imagens/mangayakiLogo.png';\nimport './LoginPage.css';\nimport { isEmailValid } from './../../componentes/helpers/EmailHelper';\nimport ValidationError from './../../componentes/ValidationError/ValidationError';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [form, setForm] = useState({\n    email: {\n      hasChanged: false,\n      value: \"\"\n    },\n    password: {\n      hasChanged: false,\n      value: \"\"\n    }\n  });\n  const navigate = useNavigate();\n  const goToRegisterPage = () => {\n    navigate('/register');\n  };\n  const goToUserHome = () => {\n    navigate('/userhome');\n  };\n  const goToHomePage = () => {\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"body\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\",\n        className: \"Logoin\",\n        onClick: goToHomePage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"area-login\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"E-mail\",\n              value: form.email.value,\n              onChange: event => setForm({\n                ...form,\n                email: {\n                  hasChanged: true,\n                  value: event.target.value\n                }\n              }),\n              \"data-testid\": \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ValidationError, {\n              hasChanged: form.email.hasChanged,\n              erroMessage: \"Email \\xE9 obrigat\\xF3rio\",\n              testId: \"email-required\",\n              type: \"required\",\n              value: form.email.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ValidationError, {\n              hasChanged: form.email.hasChanged,\n              erroMessage: \"Email \\xE9 inv\\xE1lido\",\n              testId: \"email-invalid\",\n              type: \"email\",\n              value: form.email.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Senha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Senha\",\n              value: form.password.value,\n              onChange: event => setForm({\n                ...form,\n                password: {\n                  hasChanged: true,\n                  value: event.target.value\n                }\n              }),\n              \"data-testid\": \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 58\n            }, this), /*#__PURE__*/_jsxDEV(ValidationError, {\n              hasChanged: form.password.hasChanged,\n              erroMessage: \"Senha \\xE9 obrigat\\xF3ria\",\n              testId: \"password-required\",\n              type: \"required\",\n              value: form.password.value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"recuperar\",\n              \"data-testid\": \"recover-password-button\",\n              disabled: !isEmailValid(form.email.value),\n              children: \"Esqueceu sua senha?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ou\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"outxt\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"OU\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 52\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"twoou\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              \"data-testid\": \"login-button\",\n              disabled: !isEmailValid(form.email.value) || !form.password.value,\n              onClick: goToUserHome,\n              children: \" Entrar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              \"data-testid\": \"register-button\",\n              onClick: goToRegisterPage,\n              children: \" Criar nova conta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginPage, \"pQTOoMif5Do54FYOHaIXWzC9agI=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","logo","isEmailValid","ValidationError","useNavigate","LoginPage","form","setForm","email","hasChanged","value","password","navigate","goToRegisterPage","goToUserHome","goToHomePage","event","target"],"sources":["C:/Users/tiago/Documents/Faculdade/Inter/Repositorio Mangayaki/front-end/front-end/src/Pages/login/LoginPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport logo from './../../componentes/imagens/mangayakiLogo.png';\r\nimport './LoginPage.css';\r\nimport { isEmailValid } from './../../componentes/helpers/EmailHelper';\r\nimport ValidationError from './../../componentes/ValidationError/ValidationError';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction LoginPage() {\r\n\r\n    const [form, setForm] = useState({\r\n        email: {\r\n            hasChanged: false,\r\n            value: \"\"\r\n        },\r\n        password: {\r\n            hasChanged: false,\r\n            value: \"\"\r\n        }\r\n    })\r\n\r\n    const navigate = useNavigate();\r\n    const goToRegisterPage = () => {\r\n        navigate('/register');\r\n    }\r\n    const goToUserHome = () =>{\r\n        navigate('/userhome')\r\n    }\r\n    const goToHomePage = () => {\r\n        navigate('/');\r\n    }\r\n    return (\r\n        <main>\r\n            <body>\r\n                <img src={logo} alt='logo' className='Logoin' onClick={goToHomePage}></img>\r\n                <section className='area-login'>\r\n                    <div className='login'>\r\n                        <form>\r\n                            <h2>Login</h2>\r\n                            <input type='email' placeholder='E-mail' value={form.email.value}\r\n                                onChange={event => setForm({\r\n                                    ...form, email: {\r\n                                        hasChanged: true, value: event.target.value\r\n                                    }\r\n                                })}\r\n                                data-testid='email' />\r\n                            <ValidationError\r\n                                hasChanged={form.email.hasChanged}\r\n                                erroMessage='Email Ã© obrigatÃ³rio'\r\n                                testId='email-required' type='required'\r\n                                value={form.email.value} />\r\n\r\n                            <ValidationError\r\n                                hasChanged={form.email.hasChanged}\r\n                                erroMessage='Email Ã© invÃ¡lido'\r\n                                testId='email-invalid' type='email'\r\n                                value={form.email.value} />\r\n\r\n                            <h2>Senha</h2>\r\n                            <input type='password' placeholder='Senha' value={form.password.value}\r\n                                onChange={event => setForm({\r\n                                    ...form, password: {\r\n                                        hasChanged: true, value: event.target.value\r\n                                    }\r\n                                })}\r\n                                data-testid=\"password\" /><br></br>\r\n\r\n                            <ValidationError\r\n                                hasChanged={form.password.hasChanged}\r\n                                erroMessage='Senha Ã© obrigatÃ³ria'\r\n                                testId='password-required' type='required'\r\n                                value={form.password.value} />\r\n\r\n                            <button className=\"recuperar\" data-testid=\"recover-password-button\"\r\n                                disabled={!isEmailValid(form.email.value)}>\r\n                                Esqueceu sua senha?</button>\r\n\r\n                            <div className=\"ou\" />\r\n                            <div className=\"outxt\"><p>OU</p></div>\r\n                            <div className=\"twoou\" />\r\n\r\n                            <button type='button'\r\n                                data-testid=\"login-button\"\r\n                                disabled={!isEmailValid(form.email.value) || !form.password.value} onClick={goToUserHome}> Entrar</button>\r\n                            <button type='button' data-testid=\"register-button\"\r\n                                onClick={goToRegisterPage}> Criar nova conta</button>\r\n                        </form>\r\n                    </div>\r\n                </section>\r\n            </body>\r\n        </main >\r\n    );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}